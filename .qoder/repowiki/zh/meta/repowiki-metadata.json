{"knowledge_relations":[{"id":28,"source_id":"7b5becc2-b660-4e0f-bef0-274cb4458062","target_id":"4ef01bbe-795c-4799-99a1-27fcc7571a84","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7b5becc2-b660-4e0f-bef0-274cb4458062 -\u003e 4ef01bbe-795c-4799-99a1-27fcc7571a84","gmt_create":"2025-09-19T22:05:48+08:00","gmt_modified":"2025-09-19T22:05:48+08:00"},{"id":29,"source_id":"7b5becc2-b660-4e0f-bef0-274cb4458062","target_id":"d2858041-2237-4d09-a0b2-3eef46d9574c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7b5becc2-b660-4e0f-bef0-274cb4458062 -\u003e d2858041-2237-4d09-a0b2-3eef46d9574c","gmt_create":"2025-09-19T22:05:48+08:00","gmt_modified":"2025-09-19T22:05:48+08:00"},{"id":30,"source_id":"7b5becc2-b660-4e0f-bef0-274cb4458062","target_id":"55465f82-8f37-4e86-a3e8-8379be3f5a44","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7b5becc2-b660-4e0f-bef0-274cb4458062 -\u003e 55465f82-8f37-4e86-a3e8-8379be3f5a44","gmt_create":"2025-09-19T22:05:48+08:00","gmt_modified":"2025-09-19T22:05:48+08:00"},{"id":31,"source_id":"1e3b1dc4-5a5e-4b7d-9843-9a70ae29a8c2","target_id":"245ba539-7388-4b51-9cce-a57df479e0d3","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1e3b1dc4-5a5e-4b7d-9843-9a70ae29a8c2 -\u003e 245ba539-7388-4b51-9cce-a57df479e0d3","gmt_create":"2025-09-19T22:05:48+08:00","gmt_modified":"2025-09-19T22:05:48+08:00"},{"id":32,"source_id":"1e3b1dc4-5a5e-4b7d-9843-9a70ae29a8c2","target_id":"8f69214d-5ec4-409b-9529-43c1aaf68bb4","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1e3b1dc4-5a5e-4b7d-9843-9a70ae29a8c2 -\u003e 8f69214d-5ec4-409b-9529-43c1aaf68bb4","gmt_create":"2025-09-19T22:05:48+08:00","gmt_modified":"2025-09-19T22:05:48+08:00"},{"id":33,"source_id":"1e3b1dc4-5a5e-4b7d-9843-9a70ae29a8c2","target_id":"a02c2462-5e39-4918-bac1-784e5a897722","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1e3b1dc4-5a5e-4b7d-9843-9a70ae29a8c2 -\u003e a02c2462-5e39-4918-bac1-784e5a897722","gmt_create":"2025-09-19T22:05:48+08:00","gmt_modified":"2025-09-19T22:05:48+08:00"},{"id":34,"source_id":"1e3b1dc4-5a5e-4b7d-9843-9a70ae29a8c2","target_id":"d30826c1-ccfa-4b00-bed0-e31407423105","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1e3b1dc4-5a5e-4b7d-9843-9a70ae29a8c2 -\u003e d30826c1-ccfa-4b00-bed0-e31407423105","gmt_create":"2025-09-19T22:05:48+08:00","gmt_modified":"2025-09-19T22:05:48+08:00"},{"id":35,"source_id":"1e3b1dc4-5a5e-4b7d-9843-9a70ae29a8c2","target_id":"b6cfe27c-b979-4ea8-b8d1-7abee0b12efa","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1e3b1dc4-5a5e-4b7d-9843-9a70ae29a8c2 -\u003e b6cfe27c-b979-4ea8-b8d1-7abee0b12efa","gmt_create":"2025-09-19T22:05:48+08:00","gmt_modified":"2025-09-19T22:05:48+08:00"},{"id":36,"source_id":"1e3b1dc4-5a5e-4b7d-9843-9a70ae29a8c2","target_id":"b07f97ad-c06c-4309-a899-35d9cc32b0e9","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1e3b1dc4-5a5e-4b7d-9843-9a70ae29a8c2 -\u003e b07f97ad-c06c-4309-a899-35d9cc32b0e9","gmt_create":"2025-09-19T22:05:48+08:00","gmt_modified":"2025-09-19T22:05:48+08:00"}],"wiki_catalogs":[{"id":"ff1ccb6d-0779-4121-a28c-3d9db85f6b53","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","name":"项目概述","description":"project-overview","prompt":"创建关于perf-garden项目的综合性内容，重点介绍其作为基于OpenCV的高效图像自动化框架的核心目标和用途。解释该项目如何通过模板匹配、圆圈检测和多线程处理技术解决录屏分帧打标、APP性能测试等场景中的人工机械操作问题。描述项目架构风格（过程式与函数式结合）、关键设计模式（策略模式、工厂模式、观察者模式）以及整体数据流路径：从YAML配置文件解析到多线程任务分发，再到图像检测与结果输出CSV。为初学者提供概念性概述，同时为高级开发者提供技术细节，包括系统边界、组件交互方式和性能优化理念。使用项目中的术语保持一致性，并引用README中的实际应用场景作为示例。","parent_id":"","order":0,"progress_status":"completed","dependent_files":"README.md","keywords":"","workspace_path":"","gmt_create":"2025-09-19T21:51:34+08:00","gmt_modified":"2025-09-19T21:55:30+08:00","raw_data":"WikiEncrypted:0MI1/XkBoMl0lTbK6t0Cn/+8FdvqrJ62ianMLvZj02elJtBUgH0Ns0veIx1WPtM9wwkxI+/XAqHLxJLlHB8wV7f+ZSFsWmYrjwHaKSwENxBxN1ucZGW6XlNSs2MVdc8oqA29tbbhk2KEiKPl+QZvZtQI3gQAU8Cgrge6vzdoWWiFfrVwa1zM6YrjTo9htNiTsVpsEc7mOQ9HKXCBBHAhqqcshAKis+vjThwfv7UYbuJSMfzHZDLrETHQBCkLa9G3zXB7HApVLhjFUJG2jgwuyrn39sMoFojxRn5Vfx4jUi7Ty49hsbtUO+52452Q/akNSP3Zv2AD6WfpALSN30w0PAsmZtz+lT+fGpTUf/qQzDLJg1vTwYuxs0a1tBzknNjW92tJAJQgZaUh4Xa5Z21Xyaiq4zqdt39aLWG+6Fsdj9y8r8fZW/V11iyv1rEq7mPsn0C4oePkyW/mZjnI9VJi3AkKOVI1Q6bF6onMtwh+A1/ubQHjVzewuhoyouUvg55u5EIZss68sq4G5JwD7/I/8Z3E4HNO37T3EK44BFc95y65L/iH9sLUN6rQB0Bo8vZqwd4pp2bjlAMA0709BifMUvtlPhU7+VTxolEBdjWhm1+j6PRV0RWb7Hx1QY85HEHzhhFDlAOclfkPaO9dbLvKMoCgt+5vdfeLQazZIFvF0UPxice3Yw1Nx6J99NYEhKUa3dRh7xrSLtMxJS47VUUzzqI2Sco+YgxjvGV5cR90hFywa08xIZ0AnTPHXeqslyflyHRECLx8174dK0/IfmuHULITekl8p8hBR4qfP4ejNo9rzJ2XQbkumAPTddJJtwuf++6qbc4Lz7lyBi0nB0KZgETtq5OnzWIK85QE0qRoqoZbXn/P+RrQ3JLST4jCG/8+MRtj7tblfP67/ZvUCE4A+ZalyKhlP0VZZfiMNEhy9lqSi6jz8TnDM8LxOlIJ2oDdUx7HCZa1te5TkLukmkJD11E8StEf28UlJ+KOXfrRo1hffnROZ0vrQbqGZRi/RVUKKyhXXUX151TiHysdaeHySYfIoeGNSLdSU/6UNJCH78QYhbgxsPHCUA44+uVOuK06jpMR8VXCnhjjcEwAvfNN81+9siYafukEBTri1dSWT5LIIDiXqJ1LMM8GunUF80a8PhRYh4+uvJHFCXLzp23Vp8Q/SXCTKZNGRvagOodqJAEADmifm3myYifVr/69+PJOEe1tgGrtyq+4s7SDit1B2GARrTS4umig5Y+xqfUN4CurEHsR5yuKHuyLDqCz54Xj87uMtxnyOjsuSfnci8oQcrR/WQ4BabNHX+QEFojHvSZ0wWRpnJiWtC6pHF5TqKADr6nrSKgcPYmHXKURfv17LxYsUn30bnbC1jAUqIiia6dNj3RGXCGBDGz4PdGWLPnk89lPimhmij/9G1AJ1x9k8Q==","layer_level":0},{"id":"3bfaa27a-0ae7-49d0-a250-45350a88ccfc","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","name":"cattail模板匹配","description":"cattail-template-matching","prompt":"深入介绍cattail函数的实现原理与技术细节，重点说明其基于OpenCV的matchTemplate方法进行模板匹配的完整流程。内容应包括：参数校验机制（阈值范围、裁剪比例）、图片安全读取方式（支持中文路径的imdecode处理）、图像裁剪逻辑（顶部/底部保留策略）、灰度转换必要性、模板尺寸校验规则以及相似度计算过程（TM_CCOEFF_NORMED算法）。结合PerfGarden.py中L13-L84的代码片段，详细解释返回值(status, matched, confidence, duration)的生成逻辑和状态码含义（如EC01参数错误、EC02读取失败、EC03尺寸不匹配）。提供典型使用场景示例（如识别固定UI元素），分析其优缺点（高精度但受缩放/旋转影响），并给出性能调优建议（合理设置阈值、使用crop减少计算区域、模板图像预处理）。","parent_id":"f286c846-9974-416e-89f0-7b5093769030","order":0,"progress_status":"completed","dependent_files":"PerfGarden.py,README.md","keywords":"","workspace_path":"","gmt_create":"2025-09-19T21:51:54+08:00","gmt_modified":"2025-09-19T22:00:31+08:00","raw_data":"WikiEncrypted:ZWVjJ8FQ/AOlHn1c4vIAzaBbCWd2ftyzSZot40p2m3+MLlfWwYVT3DfxoS+SaSiNb52Lwnv/BsydSMzLqhH7k6hkMdn4Hql9Edkl50puGbiw7jRmXcptgh666Rs4tmL303X+LFmtG2eyoqGs/qj1PdmI2x6nkjNlLBKX/OXU7O2G10/2NShRE5v/6I2wVC4+E6mYg4TTIwRMdGMJmxs7wvscos2298EWk6oJQZgKKJEFNi0DhXHpQHfq6xVopixBJKIXay0N6+dvfHwQxe4BclSMyuxU8gsQNugHFvuHF5wmheHJC/cC/wn/P/dcMxQZoKmKzxr4Uy/k8fVqcYOtjqD6d8bgHK2ZAepM0BYMIeAgE2lTdIdme4jJYUwdQDrtV9aNHDb/Ro5qVovUT/kc71fMsDX5NczjVNZg9zYBrIYX4NUuhVVAsGc4R0POeLvJUI9wmIt+DacjVMvBl9W5YdstymlkgU4QfyyEHHVmCWfhtYuM/8Tl547CWJrN7Wm9l8zbBWINxd0zW8/alY8XiY7by6LqSnRNq9kVW9c2uh4wuScnTJn1I1M3sn9OcsYL9h3nlhBS9Da2sEQHTIyzRO4E/Rh2LNHH1bx/omLXtewIPEyT/Vy0ZNZcEcel4pjjzZzm9X9PrT4GUL749j8SSVsBV8l3pjTbLYjMrywC6Cg1zbEqnLrXNdGQZkWGPvWIFIUfj9XVeGCHmKGC0Yd7B8eO1zQ/1KUChiSG98FCWX2Z4CzUWSrORGRWIP7V/BzDdUKHVmlvESSJ8rKPha279HRKKpx3/o47cjwK+YuIGVBeq25V3F0b2czTBX/xMN/Tm80Qdpz0cK2ViLIULF/1JYu0NVSbd13oDU5C0CvRJHJa2jGMb17UpCiPYP9PHWet8i8wE4lFx76RWKa9Kl0TOSCaIihAVF6w+bQf1OIxAzXcl3hfKS7TlyN2J/66hh7Qym6F57RdKQdM3NvUHMgboFMInlrFokVDO6nJPxBA4ziNJPoX3vxVWhpQP4vSaPUOITyzsmfIdT4QLv7eeo/EWhkXz3ySyvG7d82cSB0eKlt7kUo4qh6KMm9Vi4kEi2FirX+ryZkg+LokIs16dvuhcC8Dfo9VlAJLZzLtaAmazbSkAAZK8RUiGAPh+3aKCVXlTGVocm1B6Ev3za0QAaNGqWZ+H/+VaRPZVD3yszCWBqvJwH1OLqwe4M5DPCAVje9WVipAWMYibc8MFdBih3XpbmYQdNzmFOsywy0TT/Wr4qfzkv0egmffJfL/ZeWJLjAIqIh8zUtKtZu7qNTREgeGE55qCPOhVfZv/fCCiQPxilAGfgxTstb9DD612rgW8piUPMe3h2rwB7KQtvgSoBJWJzk4MOSBYatq1l0G4ncVdEA6bhziALuwj7FsYyD47L2euYDHaCEgKe3/K5G0a7Oho41ccdOA0+7Pvj7RhWNX4OtR/J+fyQTjXY9+ay2wTIMtuFXjLjiKtv00MZy1BVQqWZ1UC+/FYSqh1Iwj7HOz+Qt/3sqb+JjNqyStvM2tdLlOke1iJWScF89ZmQNjvH/8jNmkC3lAv88F0BtazEnlcIk=","layer_level":1},{"id":"8e73e786-7a6a-4620-9acb-e7e976d41d0a","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","name":"cattail函数详解","description":"cattail-function","prompt":"针对PerfGarden.py中的cattail函数进行深度技术文档编写。详细解析其参数校验机制（threshold范围0~1、crop范围-99~99）、安全读图实现（使用cv2.imdecode和np.fromfile避免中文路径问题）、图像裁剪逻辑（正数保留底部、负数保留顶部）、模板匹配流程（灰度转换、matchTemplate算法调用、minMaxLoc结果解析）以及返回值结构（状态码、匹配结果、置信度、耗时）。结合代码示例说明如何在不同场景下调用该函数，并分析其在图像自动化检测中的适用边界与性能优化建议。","parent_id":"44a89ca7-96ad-4e0b-82af-f911f10e5322","order":0,"progress_status":"completed","dependent_files":"PerfGarden.py","keywords":"","workspace_path":"","gmt_create":"2025-09-19T21:52:03+08:00","gmt_modified":"2025-09-19T22:02:32+08:00","raw_data":"WikiEncrypted:ZWVjJ8FQ/AOlHn1c4vIAzR9x3ktHfsgtuQJcO80NcH4tdAWe/cWMilLc5xVRAbwa7pdeZNMh7d8pMFz3yFx/Zpw41v7EIok2pEgjOHXkw2jHg1Dxx1bM3GNQtfLNGllmMDseY9zF1RB5ArSg/eiWUErT4JrYn+7BaKycEs1bFTYTZQmgIBx8DFCtJP6rQn2XOUw1X/8QkF1nAw7/b3KA1GHa+qUgRtM9UAcSg3w1WwThQQoEVaxTEFPWBGebYP53tVlDmd9jVY7f22hu3rDQQ3UZAnsccVfnmuf7c3ZU0pbSVU7ND9VGB+GuBRleV1Qmile77vkkAdx2NGVNHpkLwmNb/RezXEe3D+1v/UHSouKjHt9SnlQwtE3YfHV8IHuDE01lYRvIEU90hH8BVB2O/dcdH1ELn95RzLAAQcnEOQBLX2o5TcsLZYhkfDdjl2MMtpYRLBexmN0HUtcMzgpDO1J3W3h9wRlY3pR0ZSwgvXabrQ2nvJjjBUHOjEDajCALADFziGEOGDkz5esRsHduNIV47LWPsBQArP01sxvelTpGm1lGNQk2lJgMxGSN7rdp2BeLrtW7PPjnQ3bCxtpn4QqUYFge5uAyTFbzqMiO6xM+HDUOj64gCt0rPyhElslWVs6fP8e5PfmShVJLI/Yrc1MSg3+8rYtI0nG05FPAVEgfI9LUP1yOKdyjfpONa3bcBxO/7BzTttGukhWhaPIPlsAWgz9v+96UO3BNVwBoqaAH688aSlExaDwLZd2sI0o0LAjrLE2FWVx6j/QJzCC9wUb0mc4Q5Svo9oeljgS/qB0hojeR87wk7TczqNkgdITlSVUe45XfrjbGpW1iUpCaWd1Hw9sfL64f1DMHs921rdL7PBFFT+8Ma5c44SLOEfYg85h99JpOYbFnyDR64S4ccA0PwLEiwQMrn/iVnubxSIpKhB+hV8WKWlzZj9CqeXDYLnRTskqAnXycA3qLgUpolBlZP7C3P8AedbFE42jg7vm/WhbnfKtKgx4C4Pi9+3teNo6bW1h85zYFstE6A5IgJsVPgeDoh5Elf1d9Yegl1qXzD8gSxB4Kyx5XdB/aL8e7nIyl2g26p6IdBGFu+Q5OdkthSLyu+7NZm8PVw63WXVqAk1bUTyZLLW8BwD6MF4cR","layer_level":1},{"id":"dc74954e-f902-4f97-95c3-b821d6d5bec3","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","name":"快速开始","description":"getting-started","prompt":"编写详细的入门指南，指导用户如何在本地环境中快速部署和运行perf-garden。内容包括：使用pip安装opencv-python、numpy、pyyaml等依赖库的具体命令；准备符合命名规范的数字序列图片并组织进文件夹的方法；创建YAML配置文件的基本结构示例；调用gate_from_yaml入口函数启动处理流程的完整代码片段；以及如何查看生成的CSV结果文件。提供一个端到端的最小可运行示例，确保新手能够按照步骤在5分钟内完成首次执行。同时指出常见初始错误（如路径错误、依赖缺失）及其解决方案，确保文档具备高度可操作性。","parent_id":"","order":1,"progress_status":"completed","dependent_files":"README.md","keywords":"","workspace_path":"","gmt_create":"2025-09-19T21:51:34+08:00","gmt_modified":"2025-09-19T21:52:32+08:00","raw_data":"WikiEncrypted:qfgbutC7oyxR6nMxrwk1ODnNMBEQ3/sG78fQT1yXWju83LC7H/jAM8CEAvWT8huE5OClmQiIfNYNxHQ9s7RRS4fc8FQbnUJqtNe0AepFn3OFqlOLG423NAgTeUrR9B9HixQgLO//xB0ewphcI+NtTq1O6zXPrQ8qDUzYiVz1jndtyW9zHyisD/CimumbT0iEGXkSIlZWOGL7QKF8dfUsWY0jfLNgtOpD6h3OzLC+LP2vx0FyP9uj4EgwvcfOuNn/WWVbKJ2SYmYw5DdKAuMEeswoGRckT7DQXDrda/w5Y4FTd9MeItQrLsNTMczzEzx1WLkG1GCtBXQHurYuwCBGLCsmyZH6aNc/wwQvw7RC5DCy/DZwZ4XqgenJIceBg0rvlk8XRrYNN2F1hwvfsawOB8zqy46nCO1moPkkkA8iOU6Y5ZcXGfrQqAvzZ2l29ZDWxdYVrGXNh1B0ABfCb4l5ghQDDnfkrPAVjKUurLwoQaGXOkqOvXk6K74PEfaxBI+Y2ImO7RPwFYGY0hDvSACkFSs4zMbKE/f+8bEPJSulbgZM7A3JblypT10GO6Mupbvq305f5vJ7oe25biIStlvuIUDw4CVjag9fPUi+UExbadVuLnWVdZuUdj8Tci69YqzeP0pv8aKx0LJRUAgPhz5W0toB4RBA3gGKvI2IdC0L2qlW6/C6x5wec0oC/3n9Fp8+G3TzkNj/5epPxGSLIsBX0csY0OLzpL691jRMzA7gOACYGxByVG5LV8detC0IKj/pIl4PquzXU+YfDMG8K5BCU/91zi06bPcmQ9ZBgQna0KXed5HoXlMz13QcNWkuWtwI420+5yVCwlIlhbbrhd426Auz7HIjneN6CErUE7lAOvKCpWExnsv5/QuFawNa7kjp3GMrk1f6bdlhaiOKv0i1NGJmEBopoNI2bj98IrjTpSqQ1K/Hrdi6BonYnxj+LlOOfPQ0oQ9jJkhgn6xLNMsxy6LdA472F2gHGB57OFOSv38VCEl0QzAvFqwNd1eFRwci5QDQlgcjJ+nlf6xXt4Zsqk2TpoCXznIyThImVdnOJkp8AZVAnUViv7S0vLNd5n9tczbXpf+31NbJMF7MPlO8rgLk3RJSzuZtisZ53zYT9FcOp0Vrcb+Ku+wT/eYQ4nRoXPep/uT/qawu8aDbJ38UIU1DZltekuqYclf1P0Wfz+8p7m50C5wjfLaqE4upNvK78xGxoJ1Yoama2TIDVc3x9dGVkMvrTROTWoLawYo6J89CuaAqgB3VBPccbkM0XZU4","layer_level":0},{"id":"3f546600-9399-4776-aa5c-0289b61244c7","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","name":"blover圆圈检测","description":"blover-circle-detection","prompt":"全面解析blover函数的技术实现，重点阐述基于OpenCV霍夫变换（HoughCircles）的圆形检测机制。详细说明参数配置含义：dp（分辨率比例）、minDist（最小圆心距）、param1（Canny边缘检测阈值）、param2（累加器阈值）、minRadius/maxRadius（半径范围限制）及其对检测结果的影响。结合PerfGarden.py中L89-L160的代码实现，解释图像预处理步骤（高斯模糊降噪、灰度化）和裁剪逻辑（crop参数应用）。分析函数返回值结构及状态码（EB01参数错误、EB02读取失败），强调confidence返回实际检测到的圆数量而非置信度。提供典型应用场景（如加载动画识别），指出该方法对圆形完整性和光照条件的敏感性，并给出调参建议（根据目标特征调整半径范围和param2阈值以平衡准确率与误检率）。","parent_id":"f286c846-9974-416e-89f0-7b5093769030","order":1,"progress_status":"completed","dependent_files":"PerfGarden.py,README.md","keywords":"","workspace_path":"","gmt_create":"2025-09-19T21:51:54+08:00","gmt_modified":"2025-09-19T22:01:32+08:00","raw_data":"WikiEncrypted:JPBUlq3XkGj6H+zu35ax+r+hGzONUA+RD6mMARIg6fmUPgAt0lR8ELxLk10xI+g9tCkiSgtzwVpwsWVArYgCiBl3khk/oJ8C4VxNVQF4I15V2x9bdMv2Wp2nHHITeP6aX4C19S0AyzuSjrhV7koq9cnwQEn9hKf99WLoFgpGuU1bZxa/tYb0ffS+CrCMOjD4P2PaQKQLY/FDx49AVWRcUNSswFumJdydU4395UXw6dUr9qHx4tEwiWVBIrcaQlCw6vf/VwvQQq2/AmrXz2B2qKPuxWGTruENc2NBKzYilNZTsonKOoVqhDqHRZYn7zGDITb+T7IYhcyP75uU89U04iCnX3m4g6K1V9bNj/PiKXqvfHhzZC5yPiTtYkl3nuKf98ny7qSNaeuP/NEPm/0bl5pjKQRwOqftaRqIFqyY0h5mac4ZLK7n5NxCNko6bLWQKFQX/+ll0fbTmPW7uvijmQjZvkkzXwWofou9PjtLF/ciQaRq1LFPjB388vG2ljDYM1OY/A433/zfRjbL54aDUGZ4MSjW2unEL3Tx7XcTE4m8SuO07KniPMNFTKwbZAvafMdEedKG9y7szCPrFHXHvTVmoXvxBeJzpfYEpyHkm5frHJIkxFZJkZ1RLk6rJY87BjH17bpIEzv9AroNoFUGmo8ffXNAEAHK/zHZVrs15gQzdUBYJ7GrGagkpFBf8jALDfl+swmINW01mrJUuMOnOTY540LLSleAlYcKFkrphajk/T2SWT/IHAbPAtD09NnfZbrvHXVZPizmvsD/M25m+NE+rbzvkLzKI8pQjQxR8MDmTi2KhVW7sXJ9nNs95e61by6SOaM1Z5HUBs/9zpuTB/S6HCX/IslD/hrfK2pZulMjnZ7dIjIq5BrMIvS0q+QfB5lwxvo1mgEGIqFrxUJI7QUp27iOdhemEnDlVDB6v4nMOlXtnme0rTGQ3GSTCrdxeH8mTbqO5iU4dw7LX4bEbHNZAR87AlOy8IEi+xv2qpqBvw9XYlQVNch/A0cMM7NALfQ/6m4Fnoi0dySsz44WLbHvxYqZf36JiN0yD52ZKWYzqyaS4GGv0lEdOiGtqzbeU34w6sLKX4JtrvkOZHAcrjtA1GdmqtnGtd2uGHMeaindtOoV6QLKv6zm1WCcsDXPwcNLzadKBPRHIms/QIjTC3/HENIFqn3n6dC0lk/sStV/REGVnvRuo2ucr3Bv2dhqQxao7vUBDSjGR/lTFiFx2EwfVZnRIx/QgrcFdMv3A/APFo9+UZ7av9+TNVOZatcmYc/ESe/j62uAOjYz9sjDkBe4YAF3jA5tob0rJsmOg/XB0Kob8ZYMX81sXsgTnrFBnvZZaohpVUacJImO2ULi4QSu4P9xGKhibRtZ5mnRVbK6f0l5qbDhIQ/TDRiQj6uILRbO61g28XJv4kjimu1yBNXzF0EK3UESO7/xP1RIfpiAUVMsRVU2xajSXxkOTXYFGl2CcZTuIWB/NyuUTC03955YquGJ1IjiHAmcw/mXSdEn7RXZyRmcIYgNS8pFBe8a0Y50PD/awoLy8Qw68UDtkddrxwLUjlGmrZMfPX0sSpM=","layer_level":1},{"id":"671cf0e2-afe4-4d47-a455-29c19cccef2a","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","name":"blover函数详解","description":"blover-function","prompt":"深入解析PerfGarden.py中的blover函数设计与实现。重点说明其圆圈检测原理（基于OpenCV的HoughCircles霍夫变换），包括高斯模糊去噪、dp/minDist/param1/param2等关键参数的作用与调优策略。详细描述参数校验逻辑（threshold为正整数、crop范围控制）、灰度图安全读取、图像裁剪处理流程，以及检测结果的计数与匹配判断逻辑（confidence \u003e= threshold）。提供实际调用示例，并对比cattail函数在不同检测场景下的适用性差异。","parent_id":"44a89ca7-96ad-4e0b-82af-f911f10e5322","order":1,"progress_status":"completed","dependent_files":"PerfGarden.py","keywords":"","workspace_path":"","gmt_create":"2025-09-19T21:52:03+08:00","gmt_modified":"2025-09-19T22:02:16+08:00","raw_data":"WikiEncrypted:JPBUlq3XkGj6H+zu35ax+rVfOVmhqL29iNGTXk/gnNyjQV/gJpwS6ZFSZ0+Hy/aV5BlAOme9Cf1Y1RDQgeAqa9nVBn4wlgHCApjgIRK28fk6lTyjm4+O/LEbitlgp95gN3Zfz5HXBtWIMeM0qP5oBveFErWcqa3Hqro5s1cgGGr+JIBJ+5kuxwbDMWK4XwN9eNJHiey+GbgONq+K5EiMlmRRtYEhBo903lKACrJxTNv9isjGUaCCrghJuVAby8l9Ci8/4MPBhC5w49xWNbC0mMpeD/m+itFMaZT/MKjN06PdkK4A4qPLYH7AnyH75b6Kqev/x4z1bBL5R0fZ3FlPjiqp4ETTKy55q3a+Ae/98aQq9GEg3fIgHgIVmmldlCG9VX9ZqKHmn2jRx7o+i97DRyGinG1rMQoZFNEp7xf6UsiCwRUPoNnToL7UPhMP1HmXrHuj8deealUuCuzz2XTLwRs0arft6NdrpE1y+jCjxXUp4lcDhLiytNXyuvtiW7EKkUh8whT99fE256tkvGPEUsgkrs7osGBcevNVAwlLZKEOPulTI0F4qAjH4BzshHmCNFu1rO0vmlKFdtHu8lUQWCne2boXJVqU91m6401Iu88lwOl6+Bl2BASvM+74EbXqHzDQI2SkRO1cpps0YDzLKsaP99o/oPeaSeZp4vN0wpBHujwTXoqOY8prDqvHdzRPVpfUHK65dM+emQrsJ3uMLshEeOdzCY63eQ9krFARFbXYImSdlFOaCZCK7KoTaHQJCyXI21jgSE9Tq49ygrV7G40/fV2uVmxWjO8zOgTeTTNC3YDAMJilvCKBbVBvcFG6OuAYrR1MQvGik8RP9dR+3eN4fkxICtNjWPutTg7wY4X4Vse3VPVFUQZcQexC0oxqu0fwYeR7Qf7CK6Hcsr9btQE2CICVOmqQob5CXSEEiNSNx3P9/mP/gLUmgG18QpXjlRH0YwXweRaE6SUwcfA/qBEjWp+8+5QkM2gcPp34xA5a6DrYN8AdRNdB1LnAhAH21sz11SpdB8F45ZM6uYe8YpI7wLdpBTuprrXvENN2iio=","layer_level":1},{"id":"c0ef71cb-a79c-466c-b4d8-c4c32ccb5723","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","name":"配置文件说明","description":"configuration-reference","prompt":"详细文档化YAML配置文件的结构和参数含义，这是项目的核心集成点。解释全局参数如'path'（待处理图片根目录）、'thread_num'（并发线程数）的作用；逐一说明任务列表中每种任务类型的配置方式：'cattail'任务需指定模板图像路径、匹配阈值、裁剪区域等；'blover'任务涉及霍夫变换的参数设置；'skip'任务定义跳过帧数。提供完整的YAML示例，并标注每个字段的数据类型、是否必填、默认值及取值范围。说明配置解析函数gate_from_yaml是如何将这些参数转化为内部任务队列的，帮助用户理解配置与行为之间的映射关系。","parent_id":"","order":2,"progress_status":"completed","dependent_files":"README.md","keywords":"","workspace_path":"","gmt_create":"2025-09-19T21:51:34+08:00","gmt_modified":"2025-09-19T21:54:37+08:00","raw_data":"WikiEncrypted:aC5ZtUyEKPSxjzg//aVllPJHcelyq4yG8tTjwQZmhRD98zbEnHonxbcEGAKyyF/0zATby/9h0FS+oR6ehV9aETbV4DE/BVSHHYENrg5ghvdcrsi2C/SirfgFIEO4RrmWJxWXYIuqsdQfEN80lUXhy7fEy+pl57feJayFDtYBhnLLGl+CkNIXm2BGkxAn/fzuep1Qf93Cw1Hm4LFcgMyKiUE+ZBMIS6zlukKCRqyXjtoW2BZc2K/DO99NF9lGusk1TpCai0YIaX5Ci3nqiVLm+cwzNnCxj/7v6CmO1x2V2w2bPswq4OJAuT3pjTaXmOZZfp4YYjGf+qZbZ2aB6hPuoJvIccPia8N/XmlUmknlrE+SG2X53PbLPBijuQ92LkVYKOMx7zr/aqegkUESIBFeVXE+kU3CNuUBKeVhg60fdbmao/VKsW+JLo4FMj7W9UYyhUg4OsHN3kKAp5bUmiH80sJOuld8DD2M+564LwRY4jPcomPiYeo63roJFqoIAz9yv6Qsig+Qp/sdj38lW54M0sgkd1Xv+XvhAdkCYnpj1GwVd5h6ZscBVOv1ruIDqb5lPEGHW2xbVMtDGt9JqOGNuq+WPUgx+FbZe/a22woHbUL5+5PhxgFXq5IXlo6DaUl6VQY8t6qF+B4T3Y+bPlzK1EnwOx+aGrrjFEZ3FM97jLMfxfouuzPZYpdfyI+vUFdmiuWhJKITijme9A8vGl4TXyJ8ko3bL/T6WLsM5zBH/mnqdKEQcd4Kdv3gwN4eXpkMTDN5PLmiJG0jJtnq1ujupSADAE3JkvC24Bn79pQI7kNkepHH559OS9NwpBHpaNx+0dP7j1rti+0330z4WANmBZ/M4S38NFVlPP90Oh8PhLZ+A6XYLNijaxAN8u5YSRFVIaDz+Oh3Nq0UhKvu915tWIGZat8TlYAUBbL3Q/p5gxDqsqoYOPvYLNNJuryocxjiZgQxoBL1wkjECPLhF3/TRdf185LZXRm55pVECAlaz97GXVqNHE84OZjXGA8rhsgdPksCidgJoRam+X9ZhIMjtw/BPC64CVgsQItkokPxnYHWzdZuW4bMPXIGVlkwU8vYXq2ZaRBzuDSM7IW0hdED0f9UZ8IVSZFip3IVjwzEA7HBiiI7EDjm2pTeOY8QBFJbYdLzRNipGuZxoMRLZJIFMaNFlzfNhx9HJ2ANVvT3L4HOsHUT3gy8Ff+S6eKYgAaTc0g60Un2p1MkS4+mt71VpYjSc1NzEsz3eUQGTrLdw/hcYF++EKFBFS9P+BzFh3Jz","layer_level":0},{"id":"42a840a9-609c-4518-bcd0-8606e09c9601","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","name":"skip跳过图片","description":"skip-image-skipping","prompt":"详细说明skip功能在时间序列图像处理中的作用与实现方式。解释其作为控制逻辑而非图像分析算法的本质：通过配置跳过指定数量的初始图片帧，用于排除视频录制初期的无效或过渡画面（如APP启动黑屏、加载界面）。结合README.md中的配置示例，说明其在YAML任务定义中的使用方法（type: skip, count: N）。分析该功能如何与后续检测任务（cattail/blover）协同工作，构成完整的处理流水线。指出其优势在于简化流程控制、避免无效计算，同时提醒用户需准确预估跳过帧数以防止遗漏关键画面。提供实际应用案例（如跳过前5秒启动时间后再进行按钮识别）。","parent_id":"f286c846-9974-416e-89f0-7b5093769030","order":2,"progress_status":"completed","dependent_files":"README.md","keywords":"","workspace_path":"","gmt_create":"2025-09-19T21:51:54+08:00","gmt_modified":"2025-09-19T22:04:37+08:00","raw_data":"WikiEncrypted:x69ZpMzKWWAJIOs7YIcYvgn5OLvamwDcXKU6fdrJJy72PHl0xT+7UJlIxnwyVdMm0pzJXBj4cXzlWu6SMtDdOJ3t319HyJ/yQPMKaE2Z61ZdWw2RIjljHm15t0jUPoKE1hhvalk82KUK4xCNcmRHLKr5vg2Iz+V/mC2g3B5pslRbBRunJ/lLagISIVyOwRWslu1cLX4fWmxbLOz/xjWGz57WtwabN5yUgWVS5c3Vrit1HDNthoWFLRA03KQR1XECIpMTDZULQm2nEX+zTKm+2Fz1fI1PKtdDQPi1kSnUc6a1yyHA/bozugxk/jhA57h6dw/HYMPcMgWSM7QTuqsJvpS64l0APXAJ3U2rWPgueCTcWlen9H705xJiggx165eyFunAlKn7FYbeV46TkLSWSWbIP5a2Gt/7brQFYQwBSjNwD+Z3lCfe+UoOrE8DtX/4hVdnvnQjSQN5owzyLlQeXsxJ4VUsjOeujtHOHUub+utY82WyV0q/CN1UGo4matrVOgW9SA7VX21uFt1mZKcPfhOMeyh8Z1bNA8Yh5dSkwh8c0hxKasJmcz8AHh8uxlNDf/iyWWnkQrQ3GNmoHhZruN22Zf8ERDLX+v5xENltPzWWAQvEzqAGyFxDn1XLSCYyYLSwhR8d1XKITTDn2t3WSGc66cvBFlG4l/PgIt19hecwfvlEb/bvjhajV51p3bX7oNUzrEDUMNg/vFohVfxdQ8AxfZDMmcvACGhECRn+Jn0QId8l3C5NSsb3NLbSm/ccfFB8oFZ9aVJ5AsSPMoVJoVrPWDQYUXYrT2XNfUTPaRPBsUH5EjVn5YkMVfxpK9nsNAurvnCPEp2CDWAnshYOeCcP7+J3VPoN6McZt3VoNSKJvANekMvN+Msxt0M2qrmQjohMFTD2mnxFsDBs7oTM/+u2+Y1/kIVw/1aMyHQzayiSZ2uDYNLg8qrahL8RpTa1PQSkYyMx0joIZw/P0J5VyPwy/PnlWsYS9SMCMNhuP/X1tdPJP5ldTkze6GJCP2YrRqleRwgnO4vn7ixR7Go3DjwT9amDEvQu3+1jot7E1+m53uxX1LYjvPC1DGBy+fkD0l/B1p1HvQ7vsRfpeMXNitWjnSpOeVBa/jSODKCop6KCQmgpMCTIOSXyWrsM2k6+DZLIsoDju0cEfjcNl/rNzzh4wFMXK41OaVQWOqv16/JlPpOrFf3t9DhpMakEC+DgSoRiMJoeHixuA3dRLNpZ7ci8xAQ6pdY3FhJnwNLs/0gc0X2lkt3oOuvrO2LlGFz9PnL+JoqIV45mfAjC0XiPd5fdy7jCmNx3IyqcUIZHUmFMNp3C/wsg8x+KKsYqR191","layer_level":1},{"id":"644b5a9d-5e7e-4da9-aa0f-a484c4a3b926","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","name":"trails函数详解","description":"trails-function","prompt":"全面解析trails函数作为核心调度器的技术实现。详细说明其如何通过leap参数实现智能跳跃检测、在fade模式下追踪匹配状态变化、利用detector_func参数动态调用cattail或blover等检测器。深入分析其状态机逻辑（waiting_for_fade、first_match）、回退机制（匹配成功后回退leap-1步进行精细扫描）以及与图片列表的迭代控制关系。结合实际运行日志说明其在批量图像处理中如何显著提升检测效率，并提供典型配置参数的使用建议。","parent_id":"44a89ca7-96ad-4e0b-82af-f911f10e5322","order":2,"progress_status":"completed","dependent_files":"PerfGarden.py","keywords":"","workspace_path":"","gmt_create":"2025-09-19T21:52:03+08:00","gmt_modified":"2025-09-19T22:03:26+08:00","raw_data":"WikiEncrypted:LaaEl3XW6teQ8eKApwzFJwYkBEfU0JsOX1OGOPpePr0fAIUSTSfwY7dbb8stysfkLRBAJp36poT97pmACR2t/cBtp+xkvGnvig2emzyyZMMc9LCOmZel8ggJPZNByjpdinnyLeLasuiLsR2IzatmXTvtMzsIlraNHMkJAmJCJCWnDeDfLh33PB012IevfKcr5it4m9nHixvYCF+Wy5vX2Umsu25mwJUSySbK/hoK0vChPXHUVcQBuoU+XS3XKwsxHacikG915uCl69N/nOSx1aBJd3HP7rCsYGx/CZo2n3WK+11tJGvZamFNuAAfaXvXIWSRnj/q+EFdT9POK1kX5xYhsh4YCIMwKnc4kYK8VYG/Gz2eist6SSoD93Sr1BOr3jxv6zI0RpHqvR+FKSjXd0luwOi6QY+J1Vw94Mw1ugb7AcI33tSc6b+R3iIiVxtPQb1ydicMJI53izRRQl+Z5v0w5XOIB/JjjjsStl+En2GR2LxVFeqJ/HggWLjlx8wepSVPuiPsXhV7kCAmyfPbGmd2BGxsCFcOQGFaItmizkwcM8wtT7junVBpVzEuDwQydfBZMKI8ArMVIL5jRP9quBAJ92wHvkfz4Ay7wK3sU77/zlEiSsxhdGxS2sxTp6TCNNpyqVEAlyWLwCzID3CSgSKNzc24b0XBxCd7Tntayn3Uqif5oxHEN1cJ9lw7hudHoUJz+OekLiQjJ2Ugx6iJCAR5g8OekWj6iIVfGmoL+t41Mjvk9jt4ufjZXzRz86db5pXcO+aHCrR00B7R5AWPOvRMiH0nmWge6bN/Iy6583PdZo3tmhJEAZhaZDiWZONYhKrrcNSWbcj8yTusZzrYVQsL8Eh8cyTfOb5cA0U0prqonoCq8nSmIEFFBAqKjGLxwegVKW8tzMyszSMgf7VbGrgfrjCqCuXOx2MCpXed8O4qaY7ULilFk2j0zDlRrw8/Yw3kKZ+F7I++u7TJizmpdW0FrrO+pB+ZxEYM7t6CJPdsvmBg7xVdAZRqjHkqd6iORs3+Y59ZjyAc06VTUMFlIaFvfrf7UX/kfQxX7FkHs+o=","layer_level":1},{"id":"f286c846-9974-416e-89f0-7b5093769030","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","name":"检测方法","description":"detection-methods","prompt":"深入介绍perf-garden支持的三种核心检测方法：cattail（模板匹配）、blover（圆圈检测）和skip（跳过图片）。对于cattail，解释其基于OpenCV的matchTemplate实现原理，包括灰度转换、图像裁剪、相似度阈值判断等步骤，并引用PerfGarden.py中cattail函数的代码逻辑；对于blover，阐述霍夫圆变换的数学基础及其在识别加载动画等圆形元素中的应用，说明参数敏感性；对于skip，说明其在时间序列处理中的作用。每种方法都需提供调用上下文、典型使用场景、优缺点分析及性能调优建议。","parent_id":"","order":3,"progress_status":"completed","dependent_files":"PerfGarden.py,README.md","keywords":"","workspace_path":"","gmt_create":"2025-09-19T21:51:34+08:00","gmt_modified":"2025-09-19T21:55:26+08:00","raw_data":"WikiEncrypted:+WIdUrQ0fi/KiEyB6LhbtVfPD3T7C8Xo8LuG0/PXwMuRT62VFui7AE7XHajfXjNVqy6rc+5w78t/t1lMUI5SwsWJyraYzGp7wb8zVKG30hoZKhTU1hSnScshoDVienajiXd7tpmD0uRldfTXc99Slj3XpoicpKn7IOyDfPCuT6byTA6478r8YwE9GDtTt8vbfEovS1l44kwFzaOr67PnwA/LVoW2IwhIxFkEDXd0IPL/3MQMo/cimgFQcTjAzgVd0rI35KrQDbwAO1v4oEkxooHKbfUM7aWcGWnk5Q+VjTPuFpSCCREFj+RmiWVdBH/LZUK9yBRH80wA0KyRBJjf+ndHG7RCv8NV4T5tZPyoHw8B7IHFoq3u3VFCA/Bo8GWrADB1abOR/FsRRNXQAuqGsqJGayEcHXymFh32UFZXkzwLK4ibS9tOx4isXogDao9+SZJ+VNQrhUd/5cBGT6LWkWttywvjr8TvvMHNB+NZad1+dgpbbUPLmLirpi7xWpwla16uv7LjGb5k6Sg/l0uzPLWBjksclrMAMYaE/dCfQN5pO5LujeptNXQNorMVuGKmhGiRg+t8mMiKFDYCqKk9lcD8bChWIxOL/WS8CQWWmYsnkx+jMk+6pVG8xc9lqkKMbVur2WI5FqRetltlU6PHdV+0ujdL/3xIi/qJuQwJfnsfrSbfucuW9oTGmP/nwDpgTrqjv572RUKMQHg5PSl796FgzJFGqbVaVsq+YMj4iHBOY2pOXYKI1wwH61pXvuegU79WNma/KV4NTwAcrya1JohoTrygNPWn+rWX1KCkHPckWtBsWoyvYOnVPPM6b1j1SjMychFTcwABFWz14F+zPxmHNmDFDhCnCoUVLisYnFQh75mcE4sL2wXAPGNyaLDkctS8FnQj/Ddqo4pylLkIAMjphBt0eBBq5QUeDqtTaA2TTthu+F8S9cc3XLYkbbuKruWel0YymQysyP7lU9+LhOGOqVWymMyTVYFUCHU2d1Q+D9rhB30IRdSyvjsCuoX80pUbBLk1zjhkERJBuHy6Sh2e9DzRErO/L/v7DnMh6++Q5g7ESg0ewSkQrwjgA9+Ximi4G4EnkjdO2MJO+GKQSwG5Tc8ink0CiIt3BpX4FEWny05I3rSQ/XsA98wKRIQQzHPp5eShQTCDJ8y+ruHrSIM6bUnEA1zmLSlhWPGO6i7xyBi0GbvJQk3mYZ+rbHOaYEbQQgmkS0OTZy00JK4y2G6sYEo2VMVhsH04m5hOcGGoUtL6lk+/4pV0pkypf7ql","layer_level":0},{"id":"94a82d70-c800-4c8a-a637-bded03028c85","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","name":"gate_from_yaml函数详解","description":"gate-from-yaml","prompt":"详细阐述gate_from_yaml函数如何从YAML配置文件驱动整个自动化流程。说明其配置解析机制（path路径提取、max_threads线程数设置、任务类型识别）、任务参数转换逻辑（新旧版YAML格式兼容处理、template路径归一化）以及任务计数与表头生成策略。重点分析其如何将声明式配置转化为可执行任务列表，并调用gate_multi_thread启动多线程处理。提供YAML配置示例与错误处理场景（如路径未指定、任务为空）的应对策略。","parent_id":"44a89ca7-96ad-4e0b-82af-f911f10e5322","order":3,"progress_status":"completed","dependent_files":"PerfGarden.py","keywords":"","workspace_path":"","gmt_create":"2025-09-19T21:52:03+08:00","gmt_modified":"2025-09-19T22:04:44+08:00","raw_data":"WikiEncrypted:OYhhjYaWW9KaXL++RXvqHoX0klI33W02a1Dve5wochzqH343OsP4E/hmF3GoXtwIW4/1UntZLJ6lOrAe1umgB1QOUKyihqpTGzhscVbcAIjRpF0netlDHDvAc3N4gI/ZySJrZqyMTGsmq5kDX6/Li/oQo31enu8A1QBgr0ooT+e3Ae3QYKHthqWUYRbthFRI7hy26dPyx/zghqPlYzQB9ogRTfQk3l1j2ac1r/S9mB0d/MV05N6fXQzzoY/8CNJ3uJFe+LsKorOlT3Fl4CoRvBHLksmWIRAjRouyaWnaF+/6RRJBgE97bib77P5CS0oHA5VHsKeVXyr0iIVj57CXWLzxs1umUvxnzZUDzK+6Sydd1mNB0QNXcqWZ11ARDiyLjsSckudz143dbX0U+vSpvtHbhz/pzhOqm4fHCzQAk9xnFm5BICDZaOUkfULTgefhLzmXlV88YWmr2HCR0mVmW5Jk3ZIcYjGMeKALuBlJbR4cfFmAOV+A0021KHQ8L494fvu4ksgqDu1ujLtH9u8/RhMDVwKNY8Y6FnLwTTMAYLGyONlHxDos//kXiTAidArmiaeooVZIcTldR1e2ySJz5q4ImU0A1AwFvXN/2QOTPuGg3in3M8X7p11qNY4eveGcWktKxBFgLrZA8gp1U5zNPKs3J1Zo2WZnPY8QoNdWICnW6p8c2WFr+h0sUuv4c8Ui37bkUGk2CNY3OTZcjlmCM6NI7TOsOW746wqMZf9tTPS8OCUnm4C24j9VM1woZmpQD6KrbNTYQOpIJ2cCVcAZrcWfeeLYnMwSUO8Z/qIJ155HLeIn5MI6HVHwHLUdMlJrNsbTSkWbuLM+7YFeWYWPXvvuDloczRiyNJ4Hv0Kepwh4MN6hp2+NEvE457bwmTp95lRRN7GBYRo4vpaTIzSfyJSpLR4gn8zEvygQ36mmMs6qeEFDWsrUJm18O2srvd0U1SqWZU4g9n6PPWt9ye9YZYuxbUXKVOfGbkrhgPOsP4IfOyEgACobyZf/Q4UvAORP","layer_level":1},{"id":"44a89ca7-96ad-4e0b-82af-f911f10e5322","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","name":"核心功能技术设计","description":"core-architecture","prompt":"针对PerfGarden.py中的关键函数进行深度技术文档编写。详细解析cattail函数的参数校验、安全读图、模板匹配流程；分析blover函数的图像预处理与霍夫变换调用细节；说明trails函数如何实现跳跃检查与状态跟踪；阐述gate_from_yaml如何解析YAML并初始化任务；描述process_subfolder如何协调单个子文件夹内的所有检测任务；以及gate_multi_thread如何利用concurrent.futures实现高效的多线程并行处理。绘制函数调用关系图，展示从配置解析到结果输出的完整调用链，并分析各组件间的依赖关系与数据传递机制。","parent_id":"","order":4,"progress_status":"completed","dependent_files":"PerfGarden.py","keywords":"","workspace_path":"","gmt_create":"2025-09-19T21:51:34+08:00","gmt_modified":"2025-09-19T21:58:49+08:00","raw_data":"WikiEncrypted:4PoKJZEjoeT4XL3d+2H6W/6FWVAUV2gnu3I7xl7Vy/gYwmNjeF5pZU9UdYhhzYUBIajuUQqBYXSLOPsTy94tv4+yhtWB2WZgvzf8cnsM1Cq5JVt65uQZYvtbp6/YXDr7CFI2Bol+YfbePsZQjy01bt/noQqTOyYF6sz5UdaSYLx9pU8cSBBKoY1paL0fDMFMOld8Uy+R5s6rv4GX2SGUZerEOGCujFkNICqIIzBsF6Wh1Z9AipO4z+16gZyq3VC8xSAbBZgzU7SOn2wOZGoLye3ztznYzcKeOO4nIG8jgqonPGrKwTSex6//9Ysatjv0c5rj+QJJK8Xe3CqwdSQIPNZtqiJVPmG5sUo8F/4ZIkIlhtlUmDAFBTcM9z9Bs6cf8LaS47nFY1hmiCbsIeoZ+fwHwJ0sGbuz4ktfk1oSN72xCEjN0S9ZNsk0yxDOnSWxI/ak0W/MXkCkt3/igecRdxf+Rs59bxl/hpAs8RpykUmdb598Zkndpvob39g2Dp6l7ZGvhCzUwkXCTRkRkpx3QR4IhdRf0H0ImASKModvkBTo3fZn3QUo3nlhJ53oM2YkiEEY03K1obxVXtRLOkHigyBnv2ju/0A8DVzNRUTnRD8rMcLxTzL2hexn1ZPhv7H51ExJOjinr48WLYHyvcJ45/xwK4RtQguFsRVVBHijxyl2D+JJIQ0Qv0hWTYzGlbLG9Vy6qQY08k5LY6+VCGUEL4rsCBaa2N2xlwH/GKW1esJKEWkvrCnATVEGWuaS9549+SYZnRKkjpeYfg+URPFtz492HJQJTK5cZhtc63Bk/frCFuLId6ZA587K099J/uj9L9Rs+0dT1AVhJTJtL9FAGO9YY6J2fVr0+GjomJNxqNQ0OVdwQ/qltY10Fbh/2VJSaww65m1iqXrsxbhZrQqBWAdyGIMMvNIDStFOgK7FzFkzXdq/S3PxH7HCXcyvWLKyTLrHWQEMZtamt0H0IKj6WcLYmoWRFJXX/yZ8z43/he701Cw2ARFgbBlgnMIrkZVM2XEINeWf5NzQaDnWUI1bXf+NlZDmFZw+vR3gTmZ2F2A3plAgLkA29HXU0B60f9DLVDc3TD2TONfWxUaEe7LBPnmZYL16nmoXVLYvKrN47hN/BXh7tKSXAR9lIXAFVRa6YVxLHtk7sLRA6HIf+5xiCnZsqSSQnLHkbY9IG4CLQV+g6bEhFRjTGxqHGl4FlMtg+cvCT+WP3k4vjVQJeJIdYDPpWR1GFruClenusqzOsZ62pw6XByAewoQpje8MUFio","layer_level":0},{"id":"a3e82f40-d36c-4fb9-8771-c3cb44258f8e","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","name":"process_subfolder函数详解","description":"process-subfolder","prompt":"深度解析process_subfolder函数在多线程环境下的子文件夹处理机制。说明其如何安全读取并自然排序图片文件、维护remaining_files剩余图片列表以支持连续任务执行。详细描述其对skip任务的特殊处理（跳过指定数量图片）、任务类型路由（cattail/blover动态绑定）、trails函数调用封装以及线程安全的CSV写入实现（csv_lock锁机制与重试策略）。分析其在任务链式执行中的中断逻辑（非PASS状态终止后续任务）和进度更新机制。","parent_id":"44a89ca7-96ad-4e0b-82af-f911f10e5322","order":4,"progress_status":"completed","dependent_files":"PerfGarden.py","keywords":"","workspace_path":"","gmt_create":"2025-09-19T21:52:03+08:00","gmt_modified":"2025-09-19T22:05:23+08:00","raw_data":"WikiEncrypted:6B00hcaq6PQt9xxRHliSTi1FKNIR8u9thQFLHf0kcT565N/i28m9gsQ6QPFOcy2L42PYIp/S/Gd/8oLL2G7YKlUCylFhv+eweP6H/zLMixAbNnTEiPxshCNzL07Td25Ad8hq+I9duin1NsXxhDlenjQ6XnFOJ58WqhNMwT6i7u4mUY9R0H5YHbgX3QxTf0NHoZu3oL8aPgJ5RuttL0/2bN3oqipUiuKWWsuK8Esgs4EztR1tlowbRG84nWYzpvNjzHzIxHzCQyukwqizUYvYK3boP36SlrjdOYSl5ZvapgBPpST9I23N/oFunyTN2m5FiRQMNlKuqNxEaFZsich/aeZwoNrZefKACkB0GCzjsikBESaEHoMWVkzeGe/4s3odObImaDnuV+d6mpJd/7Hlex3AfIPa87U9y1Rgrd/uMovR2JhDMAjFD2p7HJ6sZDsjhu3Otbs3BuRKMSwhAtZTWdAE0/oXg8+vxJvllUuu1a/99Uaq74ZyWiIfaKXfhozRqiyJfDz5Q/BtIUFBxU27abm5JGIOLevK8oBRmzu1VkTRnTorXQBtvD4YdZSxPQLcndxc5U02kHZbCoOEdFsRWULZsDLqauh9Ldo/cSV0thWSLtbsSyJrOh0hiH2lll6Oj7Wq1Bd9u9GHQC7BontbT+7gs8rp0gevtWykQL8P4qE7DSyCntr/cAPDjYR4syVbOEIwtxso4a6ajQQ9xICzl2Hddy60HbnD3dXZTv8gdH67tG8cflGRFEP9NBXckw/fGr+Y+DWJm1lEbeqt0pa37iYsvl7KG8sOSpSajpTrRsHmPAtuAqRCD102pP8M8CT2ksv8PbFmgYmlNn//ua+lt++FHyblzAcMkP3eBHp11CbHAHXN3zcs4/zslKeHK5JfGSToBLfXz96nMZ6ihIORoA62MKFNi191HGaCbKmBzQT4iAyVXxvy5mvsK10a2gzALgiml4gL10LRvRVF1z1W2QzeVpot6FhuY6hgah12pktEl4W3fbautnFaajMpwv/KJpNcc13kwTnWOFrA7A3IWde3a9FTNO4zETVDwe4yvTovMoZS2HBH6pPScd029FI9","layer_level":1},{"id":"8f0cb8b1-870a-4196-82bf-c108ddebb6ed","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","name":"上手实践","description":"practical-examples","prompt":"提供真实世界的应用案例，展示perf-garden在不同场景下的使用方式。例如：如何配置一个任务来检测APP启动过程中某个按钮的出现时间戳；如何识别一段录屏中加载动画（圆形）的持续时长；如何结合skip与cattail实现对特定时间段内界面变化的精准监控。每个案例应包含完整的YAML配置示例、目录结构说明、预期输出结果及结果解读方法。通过具体数字和可视化描述增强实用性，帮助用户将理论知识转化为实际生产力。","parent_id":"","order":5,"progress_status":"completed","dependent_files":"README.md","keywords":"","workspace_path":"","gmt_create":"2025-09-19T21:51:34+08:00","gmt_modified":"2025-09-19T21:57:59+08:00","raw_data":"WikiEncrypted:9VmsFt6dTlmE5lZxsXaKkDGT6HtSI1illwEzBOimOp4IdqRaSx9HNKmf5yg5FgIPYqQfnFcN3yFEscx+VakPQLjYoS+ITRFhMeAh4hHiF3YvBNh6V1fuvO1s+7ewtwakrMU+/uec3dG/DEzw5yKPeNOKHquyJvo0bwszleOMu+eb9oYyDol3Yc8JvUpBXY1a4EZZD4NbYKLDlxZmbbuZVFGQzBnvUDTIqZSiCEVygt2WO+auFzjJii0Of40GsNFUT2caCcxXRrwHk9jrAfTO9VOW/gm/612flg7ORMh9/tPmO9ktR77vDjEbsbcics7ooD5vSRwbTaPLa/2xpDASzWRQioROFm/rcGkpWYDKkl7Vzx7UcROAtxnHFbg84UOIhParO61GqhQSImi/ud0/T3UCROdjq94cBtCCEhUUzN5DnsMmj3AYm4mcYFHCRMgGHsj9eEFTrYHgbo4KX2pUrNahc1QYnvOKKnRIxgcRuKcNrv7X61FfdFY4Pt+BNvfnPzxowj0yFkaTTn/axfDvvw1B2MtimBiVn0BXyBI6SPpAc9ovsNySajloJQejYcfWQMhkicbVH1ezKnBJZ5acsMCeErW5hP2l/z9sB3g7snixIXvZwS8xe2wKsYeTeuTLFwDmK/c1apdd8afWlK3HHdjxr9V5TfbE5QfIDaILYe/+FL+FSDRAP6wGbOArPE/EMuJBRQ/olRng2G6UAsxUNS3GsP+6aHFN5a7BKHBvi5sl0uuqA37uRCx4OggGjCgASPFWYCjxavaWebz4cK5kDE8ppY6vDa6w9f2CPm78kWDMToD82VFjtZ0aHOMSh73Mm7kuRKpfEZJM5oZO9uJmuc9yZS8K5pt7bLJ916qUV0J7mqMhTB/bMsHt1CIgaptD7WkqWBGAORhVBpPjZo8HvSWfw4xrsg9NssqH1tywmDdzDvH8fOow+lNH2B4qgw43Dm5s92flWjkF7DrpRqGKCzsh+AINjMMqy1Sz1oGGvi7+P2MFPqLsV5/leOnSjKhz78pTVCRTWP62ErS4B/UuMTkgg1raIb01FwTxzvxU2cusOOhoqrLXAGzZZDBRDhkv","layer_level":0},{"id":"3df38980-20c7-4256-b1c3-996790d51cde","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","name":"gate_multi_thread函数详解","description":"gate-multi-thread","prompt":"系统阐述gate_multi_thread函数的多线程架构设计。说明其如何利用concurrent.futures.ThreadPoolExecutor实现高效并行处理，包括线程池大小控制（max_workers）、csv_lock线程锁的同步机制、CSV文件初始化与表头写入策略。详细分析其任务分发流程（submit提交process_subfolder任务）、结果收集机制（as_completed监听完成状态）以及异常处理模式（捕获并打印子线程错误）。结合性能数据说明多线程对整体处理效率的提升效果，并提供线程数配置的最佳实践建议。","parent_id":"44a89ca7-96ad-4e0b-82af-f911f10e5322","order":5,"progress_status":"completed","dependent_files":"PerfGarden.py","keywords":"","workspace_path":"","gmt_create":"2025-09-19T21:52:03+08:00","gmt_modified":"2025-09-19T22:05:48+08:00","raw_data":"WikiEncrypted:hou2jR9qKmspjSZkKYhBINKMJBdHgoKunskpX1kNJM5PhiQH9Tplzu7PnnbW6li59r+8pGkPfrgsYsG9O7NHz6ukCIV7yfH5LSS6xr2UcXLF0mGQc3VcEJMOzSaPpJVn8+mQHtB/etwMRlk+kzK+aFo06ESuvij2MHhLaJ+fQYDV/M25a/WQaGM2n7RfUdTeNEhWD7btO2TpmdDYYl0oxdm3+UEswhpzqAc00gFkZ2fmgq25yFOoJJ1Dfi6uejQvXcmcpqGhWoFr3ulmM9/0+6Wv0XRFS5ub8sUVqn5YbuOhZZ2V0VEImJDdrXOjEDg7uQpMXKf6V32UsVaH3MUs+vCrFmdFdUq+fwjtXI8rtbDzo7zTW4AJJfdXG660+QlQ58S1gaY3PWZuxZ5IEvKTM7rEleSyKqkccjGhDSQy1teu5crL7SKZ2OSNgicN8AXM+x0bi5hVK4j62YKqq87LRo9Mv3n1OmZfjcj1LtRL9lvWpTxoNj660wnJNS2U5I7GFP198GSy9/3pmpH3KYDVsRDjPK7vZaAUpiJJ4bGWsVzk/H9OAAzMHJ/w8zc/oXaa9m4kU3j4yiYZfJfviAWWT/0wEB8ZJROaAZUjge5NldpJACX4TXbVPSwpCrVZ6LsP8tkx2TbOcACUsWsKwSxYAYazdZE8JYrEcq/Gakp8cGCadarzIwuJFxmdAnTgC9w23C4skr44W5V1iWbNvEVGoZSsyUzkPrjvLNhnlqm+EBvb7teQ3bYhtS0Li0dArrH45oICf2qJVraV3vjtBmuK0i6Ewa9dUG2UtVErTYLHDDHZawXU4qIm7464H2KVB18LdEg6ALhPV/TNki7oMF8ssa/VTGbGz09V/IwycenzlMV4sHJLN5eVLDiqxwkt9T0dOwMN6eybHg2UrhaZUd4FRm2Lb5vu5hf99WSBOREz90UoWNBTU5cUgrAy2A779gB9tQ5Wn7go/9TXaSABrdac2Wy/eK+2wBV7mHJf6sD0U7wLjKPA1RkhJAHQPXoxyrowKcIZnQoF3YpEvKood0GbP8t3ThLR5WPVXB4VgDBo+ZW6wNnF8szkcPwe14oOXvmoxYsDiqP8Aou8BHU9ZEwDXQ==","layer_level":1},{"id":"98b9db94-949e-4482-ba52-c0bf82780a7d","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","name":"常见问题","description":"troubleshooting","prompt":"整理用户在使用perf-garden过程中可能遇到的典型问题及其解决方案。包括：模板匹配失败的可能原因（如图像分辨率不一致、光照变化、模板未对齐）及应对策略；多线程环境下资源竞争或内存溢出的处理方式；霍夫圆检测参数调优技巧；YAML语法错误导致解析失败的调试方法；以及处理大量图片时的速度优化建议（如合理设置leap间隔、调整线程数）。提供错误日志示例和对应的排查步骤，帮助用户快速定位和解决问题。","parent_id":"","order":6,"progress_status":"completed","dependent_files":"README.md","keywords":"","workspace_path":"","gmt_create":"2025-09-19T21:51:34+08:00","gmt_modified":"2025-09-19T22:00:54+08:00","raw_data":"WikiEncrypted:CaKOW8OSSWs4aEYk06Hu0hGGy7zXJE5t3XZJK+9x87WZ+fRdpVzZGuPaMAANfpbNiNlPghoEA03we+9qZnsefcjndlsFM1rvks6dCTrP+ZfUWhVkq66wBjitfn04+aPTZS9EBbX+7oaS5LKfnNjvPqlr+tMlvRA86u/WacdN9syAsi5ojo6Neq81ASXZ1lGHZ0YkN9IQPrWGRctmbiYGpqDcmHfwxb8kBhgxursEUWxSchzXCEsgM1G8MwbNvi3Fu7CZ6hGB0tWRA2ky12HHbhRcklFfiSRB2O9gA129AxZfwwyA7DtCMY0pg9viQLOi5m42DD52NBaWhAuJCIFImOqhjqZzSCfmMxxFdvrKbZDstDeKY+ikRJ6CpbUnuQqiPfBNBGOLl6E9ZXy/HU/QEiR1ms8J2sa/8E2UtpuPmRQ3djux+x9ex4mbwRTw0i7wX3Cr44LSto8E5azN2qCsuK6AkucyJo+WdQhgMce1/Z9WWxvGxVilnCIHj4U3/eNFYMlZvroTgHL2F28gT03pCPG1I52LfDK5Krfwk/pkspTMGWPV4ZgE2ds7mjlxGmcBqsA37xGMh1VHkAnlTgOlLFIHKcyE9DM9Elqp40kph0SW03CpSwHGbsyM9xe5B/1Nzm99flAzmluJDdkeicEFJoFawWnkq5M46J2htL5nu6+QZqnBSVo+mLnIWzDaLwCNuskihJ2FNNhqL7EGk/IjIzzEhQisuuA7XDP/S6uTBA0AdVw+t6rr5r/51UOIYysxA1/+iLBMzqRpLIudrPwd03Tu7FJsDVffp9NpvKfagSgqImC5KyU8blRiPqBvCW6ftWRiqx0w4QvfONYhrFk0vE3BVwpCF0PWKVXQjuXJ3Ul9rVfn14dkaYrmYR39A+n7SzLmL+p+T7q1Ty8HqX+WSEXjAhHyRADBYg1Er8vxKaz2SGnRfIDehpmCBSsE1h5deNjKZX8LFZcbn4oDdHifkw95KCz4MEqP1GaKAmDbLm2wE8OxvOfpkWqkgsgZCx77PEN2zZ4hEUplyC8FuSFrDNlvdrhlKjrKnxvOAGoBVL4kvw/JNm/QxtrcTdmkd797s18vsfMq9HMvmHmpY63i3iTKfXyA0iKlqs2g5Vc6Xrg=","layer_level":0},{"id":"a9908fb3-d5e2-4433-870a-95791af2f1a6","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","name":"贡献与许可","description":"contribution-license","prompt":"文档化项目的许可协议信息（如MIT、Apache等），明确代码使用、修改和分发的权利与限制。说明社区贡献流程：如何提交Issue报告问题、如何通过Pull Request贡献新功能或修复Bug、代码风格要求、测试验证流程等。列出项目维护者或核心开发者信息，建立透明的协作机制。鼓励用户参与项目演进，并确保所有贡献符合开源规范。","parent_id":"","order":7,"progress_status":"completed","dependent_files":"README.md","keywords":"","workspace_path":"","gmt_create":"2025-09-19T21:51:34+08:00","gmt_modified":"2025-09-19T21:59:39+08:00","raw_data":"WikiEncrypted:BxDZrTl5aGXx1MaECOB3NeGPZO4cjEblKYAUcLjH8if958GSSYNtraok09vVWMnMapLsUYh2ZYF33pz44QVlebGgfFih38JaJVhDLAJeGgRVRYzcdkjidPZZr4GlIhXuRE1ZGF+3Fc+ce0W37SQAx1Bcwm6efsMNdthUJJQACBodj40XJ5L59Pw+JL3xMZfFBSdsBd6fRQST1/9z6CxLVotc36MnUlxKcocSgP32mkvpCD5b9ID72kJSIxQ+z/hga670dfL8Cj942oHAGbPsza34dIZCbJKCBvqe7b3Mj6MYCtLSgtoGQptNJyGmrxG2tger3Mq3WWZxr78VNalQ/ZymwwL14phP13gBy14QqiTEogeLhRh/ABFF9Rz3dKKYwA6eGwknz1cVf8LH7okdvSZB4YqrK82ZWTlU0VGiLnl8JwThnomwhyJX3GyJROUsWbIvU2X79n5QqzXZDxewBqIm3FjOogb9F+fAGn60EIBhF9ZKe1OGJJTcXeRJXmefpfxYeRIU9/sfM3JxIauV1+8muNTV1g0BQ6qtxoR0va+S6VdMORtPy3y2f7R6Es9dCIa+vn6eEqLxtZGONRXX/v6JTpe2AgXPMAr1nnX5DijE1TOJKYrSnC+RbnA+YKtvcwAwZtHC5mxWdTa2GL+cXDnOmmSNHw0fR48JZrTtav7kXWxSFKhAiJGxYHF2jbAPjDCxuWBus9oShTihD7xlm90Qy2SXKch7/9/epNSu/BkUOskXldKT1ncHevheXWPnh1WYkyUXoFanjTu66GTb53eAnp7YRIIOGXOVi/LD+cI0F4hfT9t94ra0BFipEHkV3Ohf2Dr4/JL3UQQmrOJ1P3NDGf9cXRfIMYC8ssHPLSA+sihN2ZKgjWgZvdFSmMiqOS3ZSkF0CqrzG0F0gIZZGk5h6zzMqaUwY3gyatqDSw8=","layer_level":0}],"wiki_items":[{"catalog_id":"dc74954e-f902-4f97-95c3-b821d6d5bec3","content":"","title":"快速开始","description":"getting-started","extend":"{}","progress_status":"completed","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","workspace_path":"","id":"a1cbcf5f-43e9-42a6-914c-ff3bfab1d775","gmt_create":"2025-09-19T21:52:32+08:00","gmt_modified":"2025-09-19T21:52:32+08:00"},{"catalog_id":"c0ef71cb-a79c-466c-b4d8-c4c32ccb5723","content":"","title":"配置文件说明","description":"configuration-reference","extend":"{}","progress_status":"completed","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","workspace_path":"","id":"46ae2ef0-16ff-4e88-bafc-c582639a3edc","gmt_create":"2025-09-19T21:54:37+08:00","gmt_modified":"2025-09-19T21:54:37+08:00"},{"catalog_id":"f286c846-9974-416e-89f0-7b5093769030","content":"","title":"检测方法","description":"detection-methods","extend":"{}","progress_status":"completed","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","workspace_path":"","id":"7b5becc2-b660-4e0f-bef0-274cb4458062","gmt_create":"2025-09-19T21:55:26+08:00","gmt_modified":"2025-09-19T21:55:26+08:00"},{"catalog_id":"ff1ccb6d-0779-4121-a28c-3d9db85f6b53","content":"","title":"项目概述","description":"project-overview","extend":"{}","progress_status":"completed","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","workspace_path":"","id":"ac86a8c4-9805-41b1-8039-11e2e30b69b0","gmt_create":"2025-09-19T21:55:30+08:00","gmt_modified":"2025-09-19T21:55:30+08:00"},{"catalog_id":"8f0cb8b1-870a-4196-82bf-c108ddebb6ed","content":"","title":"上手实践","description":"practical-examples","extend":"{}","progress_status":"completed","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","workspace_path":"","id":"f234a233-d2f6-454f-837b-6b76c9bd767c","gmt_create":"2025-09-19T21:57:59+08:00","gmt_modified":"2025-09-19T21:57:59+08:00"},{"catalog_id":"44a89ca7-96ad-4e0b-82af-f911f10e5322","content":"","title":"核心功能技术设计","description":"core-architecture","extend":"{}","progress_status":"completed","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","workspace_path":"","id":"1e3b1dc4-5a5e-4b7d-9843-9a70ae29a8c2","gmt_create":"2025-09-19T21:58:49+08:00","gmt_modified":"2025-09-19T21:58:49+08:00"},{"catalog_id":"a9908fb3-d5e2-4433-870a-95791af2f1a6","content":"","title":"贡献与许可","description":"contribution-license","extend":"{}","progress_status":"completed","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","workspace_path":"","id":"35f63a91-9ef0-4301-ac08-762eabcda4d5","gmt_create":"2025-09-19T21:59:39+08:00","gmt_modified":"2025-09-19T21:59:39+08:00"},{"catalog_id":"3bfaa27a-0ae7-49d0-a250-45350a88ccfc","content":"","title":"cattail模板匹配","description":"cattail-template-matching","extend":"{}","progress_status":"completed","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","workspace_path":"","id":"4ef01bbe-795c-4799-99a1-27fcc7571a84","gmt_create":"2025-09-19T22:00:31+08:00","gmt_modified":"2025-09-19T22:00:31+08:00"},{"catalog_id":"98b9db94-949e-4482-ba52-c0bf82780a7d","content":"","title":"常见问题","description":"troubleshooting","extend":"{}","progress_status":"completed","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","workspace_path":"","id":"23b53365-b492-44ba-8598-bbd73c89f906","gmt_create":"2025-09-19T22:00:54+08:00","gmt_modified":"2025-09-19T22:00:54+08:00"},{"catalog_id":"3f546600-9399-4776-aa5c-0289b61244c7","content":"","title":"blover圆圈检测","description":"blover-circle-detection","extend":"{}","progress_status":"completed","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","workspace_path":"","id":"d2858041-2237-4d09-a0b2-3eef46d9574c","gmt_create":"2025-09-19T22:01:32+08:00","gmt_modified":"2025-09-19T22:01:32+08:00"},{"catalog_id":"671cf0e2-afe4-4d47-a455-29c19cccef2a","content":"","title":"blover函数详解","description":"blover-function","extend":"{}","progress_status":"completed","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","workspace_path":"","id":"245ba539-7388-4b51-9cce-a57df479e0d3","gmt_create":"2025-09-19T22:02:16+08:00","gmt_modified":"2025-09-19T22:02:16+08:00"},{"catalog_id":"8e73e786-7a6a-4620-9acb-e7e976d41d0a","content":"","title":"cattail函数详解","description":"cattail-function","extend":"{}","progress_status":"completed","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","workspace_path":"","id":"8f69214d-5ec4-409b-9529-43c1aaf68bb4","gmt_create":"2025-09-19T22:02:32+08:00","gmt_modified":"2025-09-19T22:02:32+08:00"},{"catalog_id":"644b5a9d-5e7e-4da9-aa0f-a484c4a3b926","content":"","title":"trails函数详解","description":"trails-function","extend":"{}","progress_status":"completed","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","workspace_path":"","id":"a02c2462-5e39-4918-bac1-784e5a897722","gmt_create":"2025-09-19T22:03:26+08:00","gmt_modified":"2025-09-19T22:03:26+08:00"},{"catalog_id":"42a840a9-609c-4518-bcd0-8606e09c9601","content":"","title":"skip跳过图片","description":"skip-image-skipping","extend":"{}","progress_status":"completed","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","workspace_path":"","id":"55465f82-8f37-4e86-a3e8-8379be3f5a44","gmt_create":"2025-09-19T22:04:37+08:00","gmt_modified":"2025-09-19T22:04:37+08:00"},{"catalog_id":"94a82d70-c800-4c8a-a637-bded03028c85","content":"","title":"gate_from_yaml函数详解","description":"gate-from-yaml","extend":"{}","progress_status":"completed","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","workspace_path":"","id":"d30826c1-ccfa-4b00-bed0-e31407423105","gmt_create":"2025-09-19T22:04:44+08:00","gmt_modified":"2025-09-19T22:04:44+08:00"},{"catalog_id":"a3e82f40-d36c-4fb9-8771-c3cb44258f8e","content":"","title":"process_subfolder函数详解","description":"process-subfolder","extend":"{}","progress_status":"completed","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","workspace_path":"","id":"b6cfe27c-b979-4ea8-b8d1-7abee0b12efa","gmt_create":"2025-09-19T22:05:23+08:00","gmt_modified":"2025-09-19T22:05:23+08:00"},{"catalog_id":"3df38980-20c7-4256-b1c3-996790d51cde","content":"","title":"gate_multi_thread函数详解","description":"gate-multi-thread","extend":"{}","progress_status":"completed","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","workspace_path":"","id":"b07f97ad-c06c-4309-a899-35d9cc32b0e9","gmt_create":"2025-09-19T22:05:48+08:00","gmt_modified":"2025-09-19T22:05:48+08:00"}],"wiki_overview":{"content":"\u003cblog\u003e\n# Perf Garden 项目综合分析报告\n\n## 1. 项目介绍\n\n### 项目概述\nPerf Garden（性能花园）是一个基于 Python 和 OpenCV 的高效图像自动化框架，专为批量图像识别任务设计。该项目旨在解决录屏分帧打标、APP 性能测试等场景中的人工机械操作问题，通过自动化技术大幅提升处理效率。\n\n### 核心目标\n- **高效处理**：利用优化的 OpenCV 算法，在 1 秒内识别上百张图片，处理速度远超传统人工或 OCR 识别方式\n- **智能识别**：支持多种检测方法和灵活的配置选项，适应不同使用场景\n- **稳健可靠**：自动处理异常情况，单个任务出错不会影响整体流程，并实时将结果写入 CSV 报告\n\n### 目标用户\nPerf Garden 主要面向需要进行批量图像分析的开发者和测试工程师，特别适用于移动应用性能测试、UI 自动化验证、视频帧分析等场景。\n\n## 2. 技术架构\n\n### 组件分解\nPerf Garden 采用模块化设计，主要由以下几个核心组件构成：\n\n```mermaid\nflowchart TD\n    A[配置文件] --\u003e B[任务调度器]\n    B --\u003e C[检测方法模块]\n    C --\u003e D[cattail 模板匹配]\n    C --\u003e E[blover 圆圈检测]\n    B --\u003e F[多线程处理器]\n    F --\u003e G[结果写入器]\n    G --\u003e H[CSV 报告]\n```\n\n### 设计模式\n项目采用了多种设计模式来确保代码的可维护性和扩展性：\n- **策略模式**：不同的检测方法（cattail、blover）作为独立的策略实现\n- **工厂模式**：通过配置文件动态创建和配置检测任务\n- **观察者模式**：任务执行过程中的状态更新和日志输出\n\n### 系统关系\n各组件之间的关系如下：\n\n```mermaid\ngraph LR\n    A[gate_from_yaml] --\u003e B[gate_multi_thread]\n    B --\u003e C[process_subfolder]\n    C --\u003e D[trails]\n    D --\u003e E[cattail]\n    D --\u003e F[blover]\n```\n\n### 数据流图\n系统数据流动过程如下：\n\n```mermaid\nflowchart TD\n    A[YAML 配置文件] --\u003e B[解析配置]\n    B --\u003e C[创建任务队列]\n    C --\u003e D[多线程分发]\n    D --\u003e E[子文件夹处理]\n    E --\u003e F[图像检测]\n    F --\u003e G[结果收集]\n    G --\u003e H[CSV 写入]\n```\n\n## 3. 关键实现\n\n### 主要入口点\n- **[PerfGarden.py](c:\\\\Users\\\\Blind\\\\OneDrive - xunlang\\\\文档\\\\GitHub\\\\perf-garden\\\\PerfGarden.py)**：项目主文件，包含所有核心功能\n\n### 核心模块\n- **[cattail](c:\\\\Users\\\\Blind\\\\OneDrive - xunlang\\\\文档\\\\GitHub\\\\perf-garden\\\\PerfGarden.py#L13-L163)**：模板匹配检测函数，基于 OpenCV 的 `matchTemplate` 方法实现\n- **[blover](c:\\\\Users\\\\Blind\\\\OneDrive - xunlang\\\\文档\\\\GitHub\\\\perf-garden\\\\PerfGarden.py#L89-L163)**：圆圈检测函数，基于 OpenCV 的霍夫变换实现\n- **[trails](c:\\\\Users\\\\Blind\\\\OneDrive - xunlang\\\\文档\\\\GitHub\\\\perf-garden\\\\PerfGarden.py#L164-L274)**：核心逻辑调度函数，处理图片列表的模板匹配检查\n- **[gate_from_yaml](c:\\\\Users\\\\Blind\\\\OneDrive - xunlang\\\\文档\\\\GitHub\\\\perf-garden\\\\PerfGarden.py#L275-L361)**：从 YAML 文件读取配置并处理文件夹\n- **[process_subfolder](c:\\\\Users\\\\Blind\\\\OneDrive - xunlang\\\\文档\\\\GitHub\\\\perf-garden\\\\PerfGarden.py#L362-L520)**：处理单个子文件夹的所有任务\n- **[gate_multi_thread](c:\\\\Users\\\\Blind\\\\OneDrive - xunlang\\\\文档\\\\GitHub\\\\perf-garden\\\\PerfGarden.py#L521-L592)**：使用多线程处理母文件夹内所有子文件夹\n\n### 配置方法\n项目通过 YAML 配置文件进行任务定义和参数设置，支持全局参数和任务特定参数的灵活配置。\n\n### 外部依赖\n- **OpenCV**：用于图像处理和计算机视觉算法\n- **NumPy**：用于数值计算和数组操作\n- **PyYAML**：用于 YAML 配置文件的读取和解析\n\n### 集成点\n- **文件系统**：读取和处理指定目录下的图片文件\n- **CSV 输出**：将处理结果写入 CSV 文件\n- **多线程**：利用 Python 的 `concurrent.futures` 模块实现并行处理\n\n### 组件关系图\n```mermaid\ngraph TD\n    A[gate_from_yaml] --\u003e B[gate_multi_thread]\n    B --\u003e C[process_subfolder]\n    C --\u003e D[trails]\n    D --\u003e E[cattail]\n    D --\u003e F[blover]\n    A --\u003e G[配置解析]\n    G --\u003e H[YAML 文件]\n    C --\u003e I[结果写入]\n    I --\u003e J[CSV 文件]\n```\n\n## 4. 关键特性\n\n### 功能概览\nPerf Garden 提供了以下主要功能：\n- **模板匹配**：在大图中查找小图，适用于识别按钮、图标或标题等固定元素\n- **圆圈检测**：检测图片中的圆圈数量，适用于识别加载动画等场景\n- **跳过图片**：跳过指定数量的图片，适用于处理开始时的无用时间段\n- **多线程处理**：支持并行处理多个文件夹，大幅提升处理速度\n- **智能间隔**：通过设置 leap 参数实现智能间隔检测，提高处理效率\n\n### 实现亮点\n- **灵活的检测方法**：支持多种检测算法，可根据具体需求选择合适的方法\n- **参数化配置**：通过 YAML 文件进行灵活的参数配置，无需修改代码\n- **异常处理**：自动处理各种异常情况，确保整体流程的稳定性\n- **实时反馈**：在终端显示实时进展，便于监控处理过程\n\n### 特性架构图\n```mermaid\nstateDiagram-v2\n    [*] --\u003e Idle\n    Idle --\u003e Processing: 开始处理\n    Processing --\u003e TemplateMatching: cattail 任务\n    Processing --\u003e CircleDetection: blover 任务\n    Processing --\u003e SkipImages: skip 任务\n    TemplateMatching --\u003e Processing: 继续后续任务\n    CircleDetection --\u003e Processing: 继续后续任务\n    SkipImages --\u003e Processing: 继续后续任务\n    Processing --\u003e WriteResults: 所有任务完成\n    WriteResults --\u003e Idle: 返回结果\n```\n\n### 性能优化\n项目通过以下方式实现性能优化：\n- **多线程并行处理**：利用多核 CPU 的计算能力，同时处理多个子文件夹\n- **智能间隔检测**：通过 leap 参数减少不必要的检测次数\n- **图像裁剪**：通过 crop 参数减少处理区域，提高检测速度\n- **灰度图处理**：将彩色图像转换为灰度图，减少计算量\n\n### 错误处理\n项目实现了完善的错误处理机制：\n- **参数校验**：对输入参数进行严格校验\n- **图片读取保护**：使用安全的图片读取方法，避免因文件问题导致程序崩溃\n- **任务状态管理**：每个任务都有明确的状态码，便于问题排查\n\nSources:\n- [PerfGarden.py](c:\\\\Users\\\\Blind\\\\OneDrive - xunlang\\\\文档\\\\GitHub\\\\perf-garden\\\\PerfGarden.py)\n\u003c/blog\u003e","gmt_create":"2025-09-19T21:48:42+08:00","gmt_modified":"2025-09-19T21:48:42+08:00","id":"0a4d4692-9c9c-4845-a478-eeb0a6f08b5f","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","workspace_path":""},"wiki_readme":{"content":"# 🌾 Perf Garden - 性能花园，自然快乐\r\n\r\nPerf Garden 是一个基于 Python 与 OpenCV 的高效图像自动化框架，专为批量图像识别设计。它能胜任\"录屏分帧打标\"测试 APP 性能等场景中的人工机械操作问题。不仅速度超快，还能适应多种使用场景，同时支持流水线和多线程处理，让大量图像任务变得轻松自如。\r\n\r\n## 值得一试\r\n\r\n- 快速 🚀：采用经优化的 OpenCV 算法，能在 1 秒内识别上百张图片；配合多线程、智能间隔、跳过识别和裁剪等加速策略，远快于传统人工或 OCR 识别方式。\r\n- 智能 ♻️：无论你想打标多少次，识别顶部标题还是底部按钮，判断页面进入还是离开，甚至识别无文字的图标或加载动画，都能轻松设置不同场景的处理流水线。\r\n- 稳健 🦾：自动处理各种异常情况，单个任务出错不会影响整体流程，同时实时将结果写入 CSV 报告，确保工作进度不会丢失。\r\n\r\n## 快速开始\r\n\r\n1. 安装必要环境：`pip install opencv-python numpy pyyaml`\r\n2. 准备图片，将每组任务图片按数字命名，分别放入文件夹，再将所有文件夹放入一个总文件夹。\r\n3. 配置 YAML 文件，将其路径写入代码，然后运行本代码。\r\n4. 坐和放宽！在终端查看实时进展，所有结果会自动保存到总文件夹中的 CSV 文件里。\r\n\r\n提示：如果你的文件还是视频，不妨试试项目附带的脚本，可通过 FFmpeg 批量分帧并压缩图片，且文件结构符合本项目需求。\r\n\r\n### 文件结构\r\n\r\n``` text\r\n总文件夹/\r\n├── config.yml          # 配置文件\r\n├── task_1/             # 任务 1 图片组\r\n│   ├── 1.jpg           # 按数字顺序命名的图片\r\n│   ├── 2.jpg          \r\n│   └── ...\r\n├── task_2/             # 任务 2 图片组\r\n│   └── ...\r\n└── 处理结果。csv         # 自动生成的报告\r\n\r\ntemplates/              # 存放模板图片\r\n```\r\n\r\n## 配置文件\r\n\r\n会自上而下依次执行所有任务，完成后将用剩余图片执行后续任务。如果图片用完或任务出错，自动跳过所有剩余任务。\r\n\r\n```YAML\r\n- path: \"……/samples\" #总文件夹路径，注意引号和斜杆\r\n- max_threads: 8 #最大多线程数\r\n\r\n- cattail: # 任务 1，使用 cattail 检测方法（模板匹配）\r\n    - template: \"……/templates/button.jpg\" # 必填，cattail 检测方法的模板路径\r\n\r\n- skip: 10 # 任务 2，跳过 10 张图片继续\r\n\r\n- cattail: # 任务 3，使用 cattail 检测方法（模板匹配）\r\n    - template: \"……/templates/next_button.jpg\" # 必填，cattail 检测方法的模板路径\r\n    - threshold: 0.8 # cattail 检测可信度阈值\r\n    - crop: 50 # 从下向上保留图片底部 50%\r\n    - fade: false # 检测目标出现\r\n    - leap: 2 # 每两张图检查一次\r\n\r\n- blover: # 任务 4，使用 blover 检测方法（检测圆圈）\r\n    - threshold: 1 # blover 应检测几个圆圈\r\n    - crop: 50 # 从下向上保留图片底部 50%\r\n    - fade: true # 检测目标出现后消失\r\n    - leap: 2 # 每两张图检查一次\r\n```\r\n\r\n## 检测方法\r\n\r\n### cattail 模板匹配\r\n\r\n此方法在任务图片中查找模板内容，就是\"在大图中找小图\"。它基于 OpenCV 优化的滑动窗口技术，能在毫秒级完成识别。\r\n\r\ncattail 适合大多数常见任务，如识别按钮、图标或标题等固定元素。使用时，你需要先准备要识别的模板，比如从任务图片中**裁剪**出按钮图片，然后将模板路径写入 YAML 文件。\r\n\r\n注意：模板匹配对图像大小和角度很敏感，所以应该\"裁剪\"任务图片而非\"截图\"，不同尺寸的设备需要不同的模板。由于系统使用灰度图处理，所以对颜色变化不敏感。如果模板位于复杂背景中，可能难以识别。另外，模板图片不能比任务图片大。\r\n\r\n- threshold：取值 0~1，默认 0.8。表示模板匹配的可信度，值越高要求越严格，准确匹配通常在 0.9 以上。\r\n\r\n报错代码：EC01，参数错误；EC02，读取图片失败；EC03，模板图片比任务图片大。\r\n\r\n### blover 检测圆圈\r\n\r\n此方法能检测图片中的圆圈数量，基于 OpenCV 的霍夫变换数学原理，可在复杂背景中快速识别圆形，无需逐像素分析。\r\n\r\nblover 特别适合\"图片上传\"场景，当页面只有加载中的圆圈且背景复杂，无法用模板匹配时，它能识别上传过程中的\"圆圈动画\"。使用时，建议先用 cattail 定位到上传前的图片，再用 blover 确认上传状态，可设置`fade=true`检测圆圈出现后消失，从而确认图片上传完成。\r\n\r\n注意：如需更复杂的识别调整，请查看代码中的`param2`参数。\r\n\r\n- threshold：正整数，默认 1，表示图中应有几个圆圈。一般单张图片上传只有一个圆圈。\r\n\r\n报错代码：EB01，参数错误；EB02，读取图片失败。\r\n\r\n### skip 跳过图片\r\n\r\n此方法可跳过一定数量的图片，适用于处理开始时的无用时间段，或跳过加载时间长、过渡动画干扰等场景。合理使用可有效缩短任务处理时间，同时提高准确度。\r\n\r\n注意：skip 不可配置通用参数。\r\n\r\n- skip: 正整数，表示要跳过的图片数量。\r\n\r\n## 通用参数\r\n\r\n### 全局参数\r\n\r\n- path：总文件夹路径，决定任务的处理范围和 CSV 结果的输出位置。请注意使用正确的斜杠格式（/而非、）并加上引号，避免路径解析错误。\r\n- max_threads：正整数，用于设置最大并行线程数。会根据此值并行处理每个文件夹内的任务，根据处理器性能合理配置，可大幅提升处理速度，但会占用更多资源。\r\n\r\n### 配置参数\r\n\r\n以下配置参数可用于大多数检测方法，合理配置不仅能加速处理过程，还能提升识别准确度。\r\n\r\n- crop：取值 -99~99，默认为 0。\r\n  - 正值：从下向上裁剪图片，保留底部指定百分比，适合识别底部按钮等元素。\r\n  - 负值：从上向下裁剪图片，保留顶部指定百分比，适合识别顶部标题等元素。\r\n  - 设为 0：不进行裁剪，使用完整图片。\r\n\r\n- fade：布尔值，默认为 false。\r\n  - false：目标一旦检测到出现就记录，适合识别\"进入页面\"等场景。\r\n  - true：只有当目标先出现后再消失时才记录，适合识别\"离开页面\"等场景。\r\n\r\n- leap：正整数，默认为 3。\r\n  - 表示每隔几张图片检测一次，发现目标后会自动回溯检查附近和后续图片。\r\n  - 合理设置“智能间隔”，可大幅提升处理速度且不会漏检。\r\n  - 设为 1 则逐一检测每张图片，相当于不启用智能间隔。\r\n\r\n## 上手实践\r\n\r\n下面通过一个常见场景来演示 Perf Garden 的实际应用：分析\"AI 对话上传图片\"的性能指标。这个测试包含三个关键时间点：\r\n\r\n1. 导入图片开始计时\r\n2. 图片上传完成\r\n3. AI 完成回复\r\n\r\n### 准备工作\r\n\r\n首先，将录屏分帧后的图片按测试轮次放入不同文件夹，再将所有文件夹集中到一个总文件夹。在新建的 YAML 配置文件中，将总文件夹路径填入 path 字段。\r\n\r\n### 配置任务\r\n\r\n任务一：检测导入开始\r\n\r\n- 选择通用的 cattail 方法，因为导入按钮是固定元素，\r\n- 裁剪底部 30%区域 (crop: 30)，因为导入按钮位于屏幕底部，\r\n- 设置 fade 为 true，表示我们要检测按钮消失的时刻（离开页面开始计时）。\r\n\r\n任务二：检测上传完成\r\n\r\n- 选择专门的 blover 方法，适合分析上传状态，\r\n- 裁剪顶部 50%区域 (crop: -50)，因为上传图片显示在屏幕上方，\r\n- 设置 fade 为 true，表示我们需要检测上传状态消失的时刻（上传完成）。\r\n\r\n任务三：检测 AI 回复完成\r\n\r\n- 再次使用 cattail 方法检测固定元素，\r\n- 裁剪底部 50%区域 (crop: 50)，因为分享图标位于屏幕下方，\r\n- 使用默认 fade 值 (false)，因为只需检测分享图标出现即可。\r\n\r\n### 配置示例\r\n\r\n```YAML\r\n- path: \"C:/Users……/测试\"\r\n\r\n- cattail:\r\n    - template: \"c:/Users……/button.jpg\"\r\n    - crop: 30\r\n    - fade: true\r\n\r\n- blover:\r\n    - crop: -50\r\n    - fade: true\r\n\r\n- skip: 80\r\n\r\n- cattail:\r\n    - template: \"c:/Users……/share.jpg\"\r\n    - crop: 50\r\n```\r\n\r\n### 运行结果\r\n\r\n在代码底部填入 YAML 配置文件地址并运行：\r\n\r\n```Python\r\nif __name__ == \"__main__\":\r\n    yaml_path = r\"C:\\Users……测试、config.yml\"\r\n\r\n    results = gate_from_yaml(yaml_path)\r\n```\r\n\r\n终端输出显示整个处理过程仅用 0.67 秒就完成了 400 多张图片的分析：\r\n\r\n```text\r\n🌾 Perf Garden 已就绪…… 请坐和放宽！\r\n开始多线程处理，最大线程数：8\r\n【进展】子文件夹 任务 (2): 任务 1 (cattail), 匹配 frame_00032.jpg, 状态 PASS, 耗时 0.41 秒\r\n【继续】子文件夹 任务 (2): 继续已处理图片，剩余 116 张图片\r\n【进展】子文件夹 任务 (2): 任务 2 (blover), 匹配 frame_00042.jpg, 状态 PASS, 耗时 0.12 秒\r\n【继续】子文件夹 任务 (2): 继续已处理图片，剩余 106 张图片\r\n【跳过】子文件夹 任务 (2): 跳过前 80 张图片，剩余 26 张图片\r\n【进展】子文件夹 任务 (2): 任务 4 (cattail), 匹配 frame_00137.jpg, 状态 PASS, 耗时 0.12 秒\r\n【继续】子文件夹 任务 (2): 继续已处理图片，剩余 11 张图片\r\n【写入】子文件夹 任务 (2) 的结果已写入 CSV\r\n\r\n ……\r\n\r\n✅【完成】子文件夹 任务 (2) 处理完成，耗时：0.65 秒\r\n✅【完成】子文件夹 任务 (1) 处理完成，耗时：0.66 秒\r\n✅【完成】子文件夹 任务 (3) 处理完成，耗时：0.66 秒\r\n\r\n🌾 所有任务完成！总用时：0.67 秒，Have A Nice Day~ 🌾🌾🌾🌾🌾🌾\r\n结果已保存到：C:\\Users……\\测试、处理结果。csv\r\n```\r\n\r\n打开生成的 CSV 文件，可以查看每个测试轮次的关键时间点：\r\n\r\n|子文件夹名 |cattail1       |blover1        |skip1|cattail2       |\r\n|------|---------------|---------------|-----|---------------|\r\n|任务 (2)|frame_00032.jpg|frame_00042.jpg|跳过 80 张|frame_00137.jpg|\r\n|任务 (1)|frame_00032.jpg|frame_00042.jpg|跳过 80 张|frame_00137.jpg|\r\n|任务 (3)|frame_00032.jpg|frame_00042.jpg|跳过 80 张|frame_00137.jpg|\r\n\r\n从结果可以清晰看出每个关键节点对应的帧，通过帧号计算即可得出精确的性能指标。\r\n\r\n## 常见问题\r\n\r\n- Perf Garden 的性能如何？\r\n  - 根据实际测试，对于包含 200 多帧图片的 5 轮测试，使用 cattail 方法在多线程下只需 1.74 秒即可完成识别，而传统 OCR 识别方法则需要 84.6 秒。两种方法的识别准确度基本相当，但 Perf Garden 的处理速度约快 50 倍…… 而你现在可以更好的工作 ;-)\r\n- cattail 为何一直匹配失败？\r\n  - 最常见的原因是模板图片来源不当。请确保模板图片是直接从任务图片中裁剪得到的，而非通过截图或从不同尺寸设备获取的图像。像素大小的变化会显著影响模板匹配的准确度。\r\n- 如何进一步提升处理速度？\r\n  - 减小图片尺寸是最有效的方法之一。对于手机截屏，建议将宽度缩小至 720 像素即可，这能在保持识别质量的同时大幅提升处理性能。\r\n  - 如果你还未从视频中提取图片帧，可以使用本项目附带的分帧脚本，它不仅能自动提取帧，还能同时压缩图片尺寸，一步到位提高整体效率。\r\n\r\n## 更新计划\r\n\r\n后续将为花园增加增加更多的高效检测方法，适配更多的场景。“用图像的方法解决图像的问题”，让花园开满鲜花，让工作人员自然快乐。🌾\r\n\r\n## 贡献许可\r\n\r\n本项目基于 OpenCV 开发，遵循 Apache 2.0 许可协议，特此对 OpenCV 项目表示诚挚感谢。项目由 逊狼 开发，并得到了 Claude-3.7-Sonnet 和 Deepseek-R1 的 AI 协助，在此一并致谢。","gmt_create":"2025-09-19T21:46:56+08:00","gmt_modified":"2025-09-19T21:46:56+08:00","id":"4cf61a46-2ebc-42e3-9161-9304f4551c13","repo_id":"58b30929-01a3-4413-9ff3-cb88a935253c","workspace_path":""},"wiki_repo":{"id":"58b30929-01a3-4413-9ff3-cb88a935253c","workspace_path":"","name":"perf-garden","progress_status":"completed","wiki_present_status":"COMPLETED","optimized_catalog":"\".\\n├── PerfGarden.py\\n└── README.md\\n\"","current_document_structure":"WikiEncrypted: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","catalogue_think_content":"WikiEncrypted:","recovery_checkpoint":"wiki_generation_completed","last_commit_id":"0f6c698e889b020baadec1e674888b88dce517e5","last_commit_update":"2025-09-21T21:29:28+08:00","gmt_create":"2025-09-19T21:46:55+08:00","gmt_modified":"2025-09-21T21:29:55.8303594+08:00","extend_info":"{\"language\":\"zh\",\"active\":true,\"branch\":\"main\",\"shareStatus\":\"\",\"server_error_code\":\"\",\"cosy_version\":\"0.2.3\"}"}}